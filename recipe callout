//http callout
//Apex Class
public class Spoonacular {
    private static final String SPOONACULAR_API = 'https://api.spoonacular.com';
    private static final String API_KEY = 'afdbb31bdb394ad0ac172ef9de63ef77';
    
    @AuraEnabled
    public static String getRandomRecipe() {
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint(SPOONACULAR_API + '/recipes/random?apiKey=' + API_KEY);
        request.setMethod('GET');

        HttpResponse response = http.send(request);
        if (response.getStatusCode() == 200) {
            return response.getBody();
        }
        return '';
    }

    @AuraEnabled
    public static String getRecipe(String recipeId) {  
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint(SPOONACULAR_API + '/recipes/' + recipeId + '/information?apiKey=' + API_KEY);
        request.setMethod('GET');

        HttpResponse response = http.send(request);
        if (response.getStatusCode() == 200) {
            return response.getBody();
        }
        return '';
    }
    
    @AuraEnabled
    public static String getRecipeByIngredient(String ingredients) {
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint(SPOONACULAR_API + '/recipes/findByIngredients?apiKey=' + API_KEY + '&ingredients=' + ingredients);
        request.setMethod('GET');

        HttpResponse response = http.send(request);
        if (response.getStatusCode() == 200) {
            return response.getBody();
        }
        return '';
    }
}

//recipe

<template>
    <div style="margin-top: 2rem;border: 1px solid lightgray;border-radius: 4px;padding: 1rem;">
    <lightning-layout>
        <lightning-layout-item size="4">
        <img src={image} style="width: 100%;height: auto;border-radius: 4px;overflow: hidden;"/>
        </lightning-layout-item>
        <lightning-layout-item size="8" padding="horizontal-medium">
        <lightning-layout multiple-rows vertical-align="center">
            <lightning-layout-item size="12">
            <p class="slds-text-heading_medium">{title}</p>
            </lightning-layout-item>
            <template if:true={hasDetails}>
            <lightning-layout-item size="12" class="slds-m-top_medium">
                <lightning-formatted-rich-text
                value={summary}
                ></lightning-formatted-rich-text>
            </lightning-layout-item>
            <lightning-layout-item size="12" class="slds-m-top_medium">
                <span class="slds-p-right_medium" style="font-weight: bold">Price Per Serving: </span>
            <lightning-formatted-number format-style="currency" currency-code="USD" value={price}></lightning-formatted-number>
            </lightning-layout-item>
            <lightning-layout-item size="12">
                <span class="slds-p-right_medium" style="font-weight: bold">Ready In: </span>
            <lightning-formatted-number value={time}></lightning-formatted-number>&nbsp;Minutes</lightning-layout-item>
            <lightning-layout-item size="12">
            <span class="slds-p-right_medium" style="font-weight: bold">Dish Types: </span>
            <lightning-formatted-text value={dishTypes}></lightning-formatted-text>
            </lightning-layout-item>
            <lightning-layout-item size="12">
                <span class="slds-p-right_medium" style="font-weight: bold">Diets: </span>
            <lightning-formatted-text value={diets}></lightning-formatted-text>
            </lightning-layout-item>
            </template>
            <template if:false={hasDetails}>
            <lightning-button
                label="Get Full Receipe"
                variant="brand"
                onclick={fetchRecipe}
                class="slds-m-top_large"></lightning-button>
            </template>
        </lightning-layout>
        </lightning-layout-item>
    </lightning-layout>
    </div>
</template>

import { LightningElement,api } from 'lwc';
import getRecipe from "@salesforce/apex/Spoonacular.getRecipe";



export default class Search extends LightningElement {

    @api image;
    @api title;
    @api price;
    @api time;
    @api summary;
    @api recipeId;
    @api set dishTypes(data) {
    this.dishList = data && data.join();
    }
    get dishTypes() {
    return this.dishList;
    }
    @api set diets(data) {
    this.dietList = data && data.join();
    }
    get diets() {
    return this.dietList;
    }
    dishList;
    dietList;
    fetchRecipe() {
    getRecipe({ recipeId: this.recipeId })
        .then((data) => {
        const recipe = JSON.parse(data);
        if (recipe) {
            this.image = recipe.image;
            this.price = recipe.pricePerServing;
            this.time = recipe.readyInMinutes;
            this.summary = recipe.summary;
            this.dishList = recipe.dishTypes && recipe.dishTypes.join();
            this.dietList = recipe.diets && recipe.diets.join();
        }
        })
        .catch((error) => {
        console.error(error);
        });
    }

    get hasDetails() {
    return this.summary ? true : false;
    }
}
<?xml version="1.0" encoding="UTF-8"?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <isExposed>true</isExposed>
    <targets>
        <target>lightning__AppPage</target>
        <target>lightning__HomePage</target>
    </targets>
</LightningComponentBundle>

//recipe search
<template>
    <lightning-card title="Search Recipes">
    <div style="padding: 0 1rem">
    <lightning-layout horizontal-align="space">
        <lightning-layout-item size="8">
            <lightning-input name="enter-search" type="search"  placeholder="Search recipe by ingredients" variant="label-hidden" class="ingredient-input"></lightning-input> 
        </lightning-layout-item>
        <lightning-layout-item size="4" padding="horizontal-medium">
        <lightning-layout horizontal-align="start">
            <lightning-layout-item padding="horizontal-medium">
            <lightning-button label="Search" onclick={fetchRecipesByIngredients}></lightning-button>
            </lightning-layout-item>
            <lightning-layout-item>
                <lightning-button
                label="Get Random Recipe"
                variant="brand"
                onclick={fetchRandomRecipe}></lightning-button>
                </lightning-layout-item>
            </lightning-layout>
        </lightning-layout-item>
        </lightning-layout>
        <lightning-layout multiple-rows>
        <template for:each={recipes} for:item="recipe">
            <lightning-layout-item size="12" key={recipe.id}>
            <c-recipe
                recipe-id={recipe.id}
                image={recipe.image}
                summary={recipe.summary}
                time={recipe.readyInMinutes}
                price={recipe.pricePerServing}
                title={recipe.title}
                dish-types={recipe.dishTypes}
                diets={recipe.diets}></c-recipe>
            </lightning-layout-item>
        </template>
        </lightning-layout>
    </div>
    </lightning-card>
</template>

import { LightningElement } from 'lwc';
import getRandomRecipe from "@salesforce/apex/Spoonacular.getRandomRecipe";
import getRecipeByIngredients from "@salesforce/apex/Spoonacular.getRecipeByIngredient";


export default class Recipessearch extends LightningElement {

    recipes = [];
    fetchRandomRecipe() {
    getRandomRecipe()
        .then((data) => {
        this.recipes =
            JSON.parse(data) && JSON.parse(data).recipes
            ? JSON.parse(data).recipes
            : [];
        })
        .catch((error) => {
        console.error(error);
        });
    }
    fetchRecipesByIngredients() {
    const ingredients = this.template.querySelector(".ingredient-input").value;
    getRecipeByIngredients({ ingredients })
        .then((data) => {
        this.recipes = JSON.parse(data);
        })
        .catch((error) => {
        console.error(error);
        });
    }
}

<?xml version="1.0" encoding="UTF-8"?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <targets>
        <target>lightning__AppPage</target>
        <target>lightning__HomePage</target>
    </targets>
</LightningComponentBundle>
